# Use backtick as the prefix
# Do it just like this or you will not 
# be able to use type backtick literally
unbind C-b
#set -g prefix C-Space
#bind C-Space send-prefix
set -g prefix `
bind ` send-prefix
bind-key L last-window

set -g default-terminal "screen-256color"

# Start numbering at 1
set -g base-index 1

# Make mouse useful in copy mode
#set -g mode-mouse on
set -g mouse on  
#
# Allow mouse to select which pane to use
#set -g mouse-select-pane on
#set -g mouse-utf8 on

# auto enter copy mode with wheel
#bind -n WheelUpPane copy-mode
#bind -n WheelDownPane copy-mode
# both above do not work, but below works from https://github.com/tmux/tmux/issues/145
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# resize with hjkl
bind M-j resize-pane -D 10
bind M-k resize-pane -U 10
bind M-l resize-pane -L 10
bind M-h resize-pane -R 10

# # Scroll History
set -g history-limit 50000
#
# # Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on
#
# Basically allows for faster key repetition
set -s escape-time 0

# Set status bar
set -g status-justify left
set -g status-bg black
set -g status-fg white
set-option -g status-interval 5
set -g status-right-length 150
set -g status-left ""
set -g status-right "#[fg=green] %m-%d-%Y %H:%M #(whoami)             " # Add space so I can see Growl notifications in full-screen mode

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use '<prefix>-a' <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key ` send-prefix

# Highlight active window
set-window-option -g window-status-current-bg blue

# Turn on vi bindings in copy mode
set-option -g status-keys vi
set-window-option -g mode-keys vi

# Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

#needed to devserver, but doesn't work locally
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection
# Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#unbind -T copy-mode-vi send-keys -X Enter
#bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Move around panes vim style
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# bind 6->0 to set widths for pane 0 
#bind-key 6 resize-pane -t 0 -x 80
#bind-key 7 resize-pane -t 0 -x 90
#bind-key 8 resize-pane -t 0 -x 100
#bind-key 9 resize-pane -t 0 -x 110
#bind-key 0 resize-pane -t 0 -x 120
#unbind 6
#unbind 7
#unbind 8
#unbind 9
#unbind 0
bind-key    -T prefix 6                select-window -t :=6
bind-key    -T prefix 7                select-window -t :=7
bind-key    -T prefix 8                select-window -t :=8
bind-key    -T prefix 9                select-window -t :=9
bind-key    -T prefix 0                select-window -t :=0


# balance pane widths 
#bind-key - select-layout even-vertical
#bind-key + select-layout even-horizontal

# Copy to OSX clipboard
bind-key y run-shell "tmux save-buffer - | reattach-to-user-namespace pbcopy"

# clear history 
bind -n C-k clear-history

# renumber windows when a window closes 
set-option -g renumber-windows on

# reorder windows
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

